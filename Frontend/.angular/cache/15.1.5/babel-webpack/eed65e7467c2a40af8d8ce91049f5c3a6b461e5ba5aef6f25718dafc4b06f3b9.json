{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(crudService, toastr, formBuilder) {\n    this.crudService = crudService;\n    this.toastr = toastr;\n    this.formBuilder = formBuilder;\n    this.form = new FormGroup({\n      email: new FormControl(''),\n      password: new FormControl('')\n    });\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  // get f(): { [key: string]: AbstractControl } {\n  // return this.form.controls;\n  // }\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAuCC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAQ1F,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAQzBC,YAAoBC,WAAuB,EAAWC,MAAsB,EAAUC,WAAyB;IAA3F,gBAAW,GAAXF,WAAW;IAAuB,WAAM,GAANC,MAAM;IAA0B,gBAAW,GAAXC,WAAW;IANjG,SAAI,GAAc,IAAIN,SAAS,CAAC;MAC9BO,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,CAAC;MAC1BS,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE;KAC7B,CAAC;IACF,cAAS,GAAG,KAAK;EAKjB;EAKAU,QAAQ;IAIN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAChC;MACEC,IAAI,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MAE/BN,KAAK,EAAE,CAAC,EAAE,EAAE,CAACN,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACM,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CACR,EAAE,EACF,CACEP,UAAU,CAACY,QAAQ,EACnBZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EACvBb,UAAU,CAACc,SAAS,CAAC,EAAE,CAAC,CACzB,CACF;MACDC,eAAe,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACY,QAAQ;KAC1C,CAEF;EACH;EAEA,IAAII,CAAC;IACH,OAAO,IAAI,CAACP,IAAI,CAACQ,QAAQ;EAC3B;EACC;EACA;EACD;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACV,IAAI,CAACW,OAAO,EAAE;MACrB;;EAGD;CAEJ;AAvDYnB,cAAc,eAL1BJ,SAAS,CAAC;EACTwB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWtB,cAAc,CAuD1B;SAvDYA,cAAc","names":["Component","FormControl","FormGroup","Validators","LoginComponent","constructor","crudService","toastr","formBuilder","email","password","ngOnInit","form","group","name","required","minLength","maxLength","confirmPassword","f","controls","onSubmit","submitted","invalid","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/windows/Documents/projects/WEBprojectHOPE/Frontend/src/app/Views/login/login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CrudService } from 'src/app/service/crud.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  form: FormGroup = new FormGroup({\n    email: new FormControl(''),\n    password: new FormControl(''),\n  });\n  submitted = false;\n\n  constructor(private crudService:CrudService , private toastr : ToastrService, private formBuilder : FormBuilder){\n   \n    \n  }\n\n\n \n\n  ngOnInit(): void {\n\n   \n    \n    this.form = this.formBuilder.group(\n      {\n        name: ['', Validators.required],\n      \n        email: ['', [Validators.required, Validators.email]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(40)\n          ]\n        ],\n        confirmPassword: ['', Validators.required],\n      },\n     \n    );\n  }\n\n  get f()  {\n    return this.form.controls;\n  }\n   // get f(): { [key: string]: AbstractControl } {\n   // return this.form.controls;\n  // }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n\n\n    }}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}