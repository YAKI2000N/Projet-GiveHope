{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_23_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, LoginComponent_div_23_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, LoginComponent_div_28_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"password\"].errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(crudService, toastr, formBuilder) {\n    this.crudService = crudService;\n    this.toastr = toastr;\n    this.formBuilder = formBuilder;\n    this.form = new FormGroup({\n      email: new FormControl(''),\n      password: new FormControl('')\n    });\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  // get f(): { [key: string]: AbstractControl } {\n  // return this.form.controls;\n  // }\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    this.crudService.login(this.form.value).subscribe(res => {\n      this.data = res;\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.CrudService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 38,\n  vars: 9,\n  consts: [[1, \"background-radial-gradient\", \"overflow-hidden\"], [1, \"col-lg-6\", \"mb-5\", \"mb-lg-0\", \"position-relative\"], [\"id\", \"radius-shape-1\", 1, \"position-absolute\", \"rounded-circle\", \"shadow-5-strong\"], [\"id\", \"radius-shape-2\", 1, \"position-absolute\", \"shadow-5-strong\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col\", \"col-xl-10\"], [1, \"card\", 2, \"border-radius\", \"1rem\"], [1, \"row\", \"g-0\"], [1, \"col-md-6\", \"col-lg-5\", \"d-none\", \"d-md-block\"], [\"src\", \"assets/sign_in_image.png\", \"alt\", \"login form\", 1, \"img-fluid\"], [1, \"col-md-6\", \"col-lg-7\", \"d-flex\", \"align-items-center\"], [1, \"card-body\", \"p-4\", \"p-lg-5\", \"text-black\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mb-3\", \"pb-1\"], [1, \"logo\"], [\"src\", \"assets/logo.png\", \"alt\", \"Logo\", \"width\", \"100\", \"height\", \"100\"], [1, \"fw-normal\", \"mb-3\", \"pb-3\", 2, \"letter-spacing\", \"1px\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"pt-1\", \"mb-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-dark\", \"btn-lg\", \"btn-block\"], [\"href\", \"#!\", 1, \"small\", \"text-muted\"], [1, \"test\"], [\"href\", \"#!\", 2, \"color\", \"#393f81\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8)(9, \"div\", 9);\n      i0.ɵɵelement(10, \"img\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 11)(12, \"div\", 12)(13, \"form\", 13);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_13_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(14, \"div\", 14)(15, \"div\", 15);\n      i0.ɵɵelement(16, \"img\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"h5\", 17);\n      i0.ɵɵtext(18, \"Sign into your account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 18)(20, \"label\");\n      i0.ɵɵtext(21, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 19);\n      i0.ɵɵtemplate(23, LoginComponent_div_23_Template, 2, 1, \"div\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 18)(25, \"label\");\n      i0.ɵɵtext(26, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 21);\n      i0.ɵɵtemplate(28, LoginComponent_div_28_Template, 2, 1, \"div\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 22)(30, \"button\", 23);\n      i0.ɵɵtext(31, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"a\", 24);\n      i0.ɵɵtext(33, \"Forgot password?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"p\", 25);\n      i0.ɵɵtext(35, \"Don't have an account? \");\n      i0.ɵɵelementStart(36, \"a\", 26);\n      i0.ɵɵtext(37, \"Register here\");\n      i0.ɵɵelementEnd()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f[\"email\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"email\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.NgClass, i4.NgIf],\n  styles: [\".tall-image[_ngcontent-%COMP%] {\\n  border: 2px solid #333;\\n}\\n\\n.img-fluid[_ngcontent-%COMP%] {\\n  border-radius: 1rem 20rem 20rem 1rem;\\n}\\n\\n.test[_ngcontent-%COMP%] {\\n  color: #393f81;\\n}\\n\\n.background-radial-gradient[_ngcontent-%COMP%] {\\n  background-color: hsl(349deg, 18%, 58%);\\n  background-image: radial-gradient(650px circle at 0% 0%, hsl(336deg, 18%, 54%) 15%, hsl(353deg, 17%, 54%) 35%, hsl(341deg, 20%, 40%) 75%, hsl(347deg, 14%, 49%) 80%, transparent 100%), radial-gradient(1250px circle at 100% 100%, hsl(335deg, 16%, 47%) 15%, hsl(346deg, 24%, 54%) 35%, hsl(341deg, 20%, 40%) 75%, hsl(354deg, 25%, 54%) 80%, transparent 100%);\\n}\\n\\n#radius-shape-1[_ngcontent-%COMP%] {\\n  height: 220px;\\n  width: 220px;\\n  top: -60px;\\n  left: -130px;\\n  background: radial-gradient(#69313f, #69313f);\\n  overflow: hidden;\\n}\\n\\n#radius-shape-2[_ngcontent-%COMP%] {\\n  border-radius: 38% 62% 63% 37%/70% 33% 67% 30%;\\n  bottom: -60px;\\n  right: -110px;\\n  width: 300px;\\n  height: 300px;\\n  background: radial-gradient(#69313f, #69313f);\\n  overflow: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvVmlld3MvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBQTtBQUNGOztBQUNBO0VBQ0Usb0NBQUE7QUFFRjs7QUFBQTtFQUNBLGNBQUE7QUFHQTs7QUFBQTtFQUNFLHVDQUFBO0VBQ0EsaVdBQUE7QUFHRjs7QUFXQTtFQUNFLGFBQUE7RUFDQSxZQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7RUFDQSw2Q0FBQTtFQUNBLGdCQUFBO0FBUkY7O0FBV0E7RUFDRSw4Q0FBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSw2Q0FBQTtFQUNBLGdCQUFBO0FBUkYiLCJzb3VyY2VzQ29udGVudCI6WyIudGFsbC1pbWFnZSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICMzMzM7XG59XG4uaW1nLWZsdWlke1xuICBib3JkZXItcmFkaXVzOiAxcmVtIDIwcmVtIDIwcmVtIDFyZW07XG59XG4udGVzdCB7XG5jb2xvcjogIzM5M2Y4MTtcbn1cblxuLmJhY2tncm91bmQtcmFkaWFsLWdyYWRpZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogaHNsKDM0OSwgMTglLCA1OCUpO1xuICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoNjUwcHggY2lyY2xlIGF0IDAlIDAlLFxuICAgICAgaHNsKDMzNiwgMTglLCA1NCUpIDE1JSxcbiAgICAgIGhzbCgzNTMsIDE3JSwgNTQlKSAzNSUsXG4gICAgICBoc2woMzQxLCAyMCUsIDQwJSkgNzUlLFxuICAgICAgaHNsKDM0NywgMTQlLCA0OSUpIDgwJSxcbiAgICAgIHRyYW5zcGFyZW50IDEwMCUpLFxuICAgIHJhZGlhbC1ncmFkaWVudCgxMjUwcHggY2lyY2xlIGF0IDEwMCUgMTAwJSxcbiAgICAgIGhzbCgzMzUsIDE2JSwgNDclKSAxNSUsXG4gICAgICBoc2woMzQ2LCAyNCUsIDU0JSkgMzUlLFxuICAgICAgaHNsKDM0MSwgMjAlLCA0MCUpIDc1JSxcbiAgICAgIGhzbCgzNTQsIDI1JSwgNTQlKSA4MCUsXG4gICAgICB0cmFuc3BhcmVudCAxMDAlKTtcbn1cblxuI3JhZGl1cy1zaGFwZS0xIHtcbiAgaGVpZ2h0OiAyMjBweDtcbiAgd2lkdGg6IDIyMHB4O1xuICB0b3A6IC02MHB4O1xuICBsZWZ0OiAtMTMwcHg7XG4gIGJhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudCgjNjkzMTNmLCAjNjkzMTNmKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuI3JhZGl1cy1zaGFwZS0yIHtcbiAgYm9yZGVyLXJhZGl1czogMzglIDYyJSA2MyUgMzclIC8gNzAlIDMzJSA2NyUgMzAlO1xuICBib3R0b206IC02MHB4O1xuICByaWdodDogLTExMHB4O1xuICB3aWR0aDogMzAwcHg7XG4gIGhlaWdodDogMzAwcHg7XG4gIGJhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudCgjNjkzMTNmLCAjNjkzMTNmKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","crudService","toastr","formBuilder","email","password","ngOnInit","form","group","name","required","minLength","maxLength","confirmPassword","f","controls","onSubmit","submitted","invalid","login","value","subscribe","res","data","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/windows/Documents/projects/WEBprojectHOPE/Frontend/src/app/Views/login/login.component.ts","/home/windows/Documents/projects/WEBprojectHOPE/Frontend/src/app/Views/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CrudService } from 'src/app/service/crud.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  form: FormGroup = new FormGroup({\n    email: new FormControl(''),\n    password: new FormControl(''),\n  });\n  submitted = false;\n  data:any;\n\n  constructor(private crudService:CrudService , private toastr : ToastrService, private formBuilder : FormBuilder){\n   \n    \n  }\n\n\n \n\n  ngOnInit(): void {\n\n   \n    \n    this.form = this.formBuilder.group(\n      {\n        name: ['', Validators.required],\n      \n        email: ['', [Validators.required, Validators.email]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(40)\n          ]\n        ],\n        confirmPassword: ['', Validators.required],\n      },\n     \n    );\n  }\n\n  get f()  {\n    return this.form.controls;\n  }\n   // get f(): { [key: string]: AbstractControl } {\n   // return this.form.controls;\n  // }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n\n\n    }\n\n    this.crudService.login(this.form.value).subscribe(res =>{\n      this.data = res ;\n    })\n  \n  }\n\n\n\n}\n","<section class=\"background-radial-gradient overflow-hidden\">\n  <div class=\"col-lg-6 mb-5 mb-lg-0 position-relative\">\n    <div id=\"radius-shape-1\" class=\"position-absolute rounded-circle shadow-5-strong\"></div>\n    <div id=\"radius-shape-2\" class=\"position-absolute shadow-5-strong\"></div>\n  </div>  \n\n  <div class=\"container py-5 h-100\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col col-xl-10\">\n        <div class=\"card\" style=\"border-radius: 1rem;\">\n          <div class=\"row g-0\">\n            <div class=\"col-md-6 col-lg-5 d-none d-md-block\">\n              <img src=\"assets/sign_in_image.png\" alt=\"login form\" class=\"img-fluid\" >\n            </div>\n            <div class=\"col-md-6 col-lg-7 d-flex align-items-center\">\n              <div class=\"card-body p-4 p-lg-5 text-black\">\n                <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n                  <div class=\"text-center mb-3 pb-1\">\n                    <div class=\"logo\">\n                      <img src=\"assets/logo.png\" alt=\"Logo\" width=\"100\" height=\"100\">\n                    </div>\n                  </div>\n\n                  <h5 class=\"fw-normal mb-3 pb-3\" style=\"letter-spacing: 1px;\">Sign into your account</h5>\n\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"text\"\n                      formControlName=\"email\"\n                      class=\"form-control\"\n                      [ngClass]=\"{ 'is-invalid': submitted && f['email'].errors }\"\n                    />\n                    <div *ngIf=\"submitted && f['email'].errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f['email'].errors['required']\">Email is required</div>\n                    </div>\n                  </div>\n\n                  <div class=\"form-group\">\n                    <label>Password</label>\n                    <input\n                      type=\"password\"\n                      formControlName=\"password\"\n                      class=\"form-control\"\n                      [ngClass]=\"{ 'is-invalid': submitted && f['password'].errors }\"\n                    />\n                    <div *ngIf=\"submitted && f['password'].errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f['password'].errors['required']\">Password is required</div>\n                    </div>\n                  </div>\n\n                  <div class=\"pt-1 mb-4\">\n                    <button class=\"btn btn-dark btn-lg btn-block\" type=\"button\">Login</button>\n                  </div>\n\n                  <a class=\"small text-muted\" href=\"#!\">Forgot password?</a>\n                  <p class=\"test\">Don't have an account? <a href=\"#!\" style=\"color: #393f81;\">Register here</a></p>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}